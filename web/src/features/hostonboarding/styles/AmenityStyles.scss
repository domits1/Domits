/** START OF FILE AmenityStyles.scss (Target Checkbox Style - SVG Checkmark) */
:root {
    // Theme Colors - Simplified for checkbox clarity
    --primary-color: #1d3b5e; // Used for buttons, titles, etc. (NOT checkbox)
    --primary-hover-color: #27466c;
    --primary-light-color: #f8f9fa; // Optional selected item background
    --secondary-color: #6c757d;
    --secondary-hover-color: #5a6268;
    --background-color: #f8f9fa;
    --container-bg-color: #ffffff;
    --border-color: #e2e8f0; // Default item border
    --checkbox-border-color: #212529; // Use a dark color like text-color for the checkbox border/checkmark
    --text-color: #1f2937;
    --text-muted-color: #6b7280;
    --text-light-color: #ffffff;
    --focus-ring-color: rgba(29, 59, 94, 0.4);

    // Dimensions & Radius
    --border-radius-sm: 0.15rem; // <<< Much less rounding for the checkbox
    --border-radius-md: 0.375rem; // Item rounding
    --border-radius-lg: 0.5rem; // Container rounding
    --checkbox-size: 1.1em;
    --checkbox-border-width: 1.5px; // Control thickness

    // Spacing units
    --spacing-xs: 0.25rem;
    --spacing-sm: 0.5rem;
    --spacing-md: 1rem;
    --spacing-lg: 1.5rem;
    --spacing-xl: 2rem;
    --spacing-xxl: 2.5rem;

    // Transitions
    --transition-fast: all 0.15s ease-in-out;
    --transition-base: all 0.2s ease-in-out;
}

*,
*::before,
*::after {
    box-sizing: border-box;
}

body {
    background-color: var(--background-color);
    color: var(--text-color);
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,
    Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji';
    line-height: 1.6;
    margin: 0;
}

.onboarding-host-div {
    padding: var(--spacing-md) 0;
}

.page-body {
    width: 100%;
}

.amenity-container {
    width: 90%;
    max-width: 980px;
    margin: var(--spacing-lg) auto;
    padding: var(--spacing-xl) var(--spacing-xxl);
    background: var(--container-bg-color);
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius-lg);
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.05);
}

.onboardingSectionTitle {
    font-size: clamp(1.6rem, 4vw, 2rem);
    font-weight: 700;
    color: var(--primary-color);
    margin-bottom: var(--spacing-sm);
    text-align: center;
}

.onboardingSectionSubtitle {
    font-size: clamp(0.95rem, 2.5vw, 1.1rem);
    color: var(--text-muted-color);
    margin-bottom: var(--spacing-xl);
    text-align: center;
    max-width: 650px;
    margin-left: auto;
    margin-right: auto;
}

.amenity-groups {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: var(--spacing-xl);
    margin-top: var(--spacing-lg);
}

.amenity-category {
    h3 {
        font-size: 1.25rem;
        font-weight: 600;
        color: var(--primary-color);
        margin-bottom: var(--spacing-md);
        padding-bottom: var(--spacing-sm);
        border-bottom: 1px solid var(--border-color);
    }
}

.amenity-items {
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--spacing-sm);
}

// Styling for individual amenity items (the <label> element)
.amenity-item {
    display: flex;
    align-items: flex-start;
    position: relative;
    cursor: pointer;
    border: 1px solid var(--border-color); // Default item border
    border-radius: var(--border-radius-md); // Item rounding
    padding: var(--spacing-sm) var(--spacing-md);
    background-color: var(--container-bg-color);
    transition: background-color var(--transition-fast),
    border-color var(--transition-fast);

    padding-left: calc(var(--spacing-md) + var(--checkbox-size) + var(--spacing-sm));

    // --- TARGET Checkbox Style (Black/White, Custom Check) ---

    // The custom checkbox box (::before)
    &::before {
        content: '';
        position: absolute;
        left: var(--spacing-md);
        top: calc(var(--spacing-sm) + (1.5em - var(--checkbox-size)) / 2); // Align with text line
        width: var(--checkbox-size);
        height: var(--checkbox-size);
        // ** Use dark border, adjust thickness, less rounding **
        border: var(--checkbox-border-width) solid var(--checkbox-border-color);
        border-radius: var(--border-radius-sm); // <<< Less rounded corners
        background-color: var(--container-bg-color); // Always white background
        transition: border-color var(--transition-fast);
    }

    // The checkmark using SVG background (::after)
    &::after {
        content: ''; // <<< No character content needed
        position: absolute;
        // Position to cover the ::before element area
        left: var(--spacing-md);
        top: calc(var(--spacing-sm) + (1.5em - var(--checkbox-size)) / 2);
        width: var(--checkbox-size);
        height: var(--checkbox-size);

        // ** Use SVG for the checkmark **
        // Basic L-shaped checkmark SVG, URL-encoded with black fill (%23000000)
        // You might need to adjust the path 'd' attribute for the exact shape/thickness
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill='none' stroke='%23000000' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' d='M4 8 l3 3 L13 4'/%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-position: center center;
        // Adjust size of the checkmark within the box (e.g., 70%)
        background-size: 70%;

        opacity: 0; // Hidden by default
        transition: opacity var(--transition-fast);
        pointer-events: none;
    }

    // Hover state - applies ONLY when the item is NOT selected
    &:hover:not(.selected) {
        border-color: var(--border-color-medium);
        background-color: #f8f9fa;
        // Optional: Slightly change checkbox border on hover
        // &::before {
        //     border-color: #adb5bd;
        // }
    }

    // Style when the item is selected (.selected class on label)
    &.selected {
        // Keep item border default or subtle blue (optional)
        // border-color: var(--primary-color);
        // background-color: var(--primary-light-color); // Optional subtle background

        // Style the custom checkbox box when selected
        &::before {
            // Keep the border black/dark
            border-color: var(--checkbox-border-color);
            // Background remains white
        }
        // Show the SVG checkmark when selected
        &::after {
            opacity: 1; // SVG checkmark becomes visible
        }
    }

    // --- Accessibility & Hidden Input ---
    input[type='checkbox'] {
        appearance: none;
        -webkit-appearance: none;
        -moz-appearance: none;
        position: absolute;
        width: 1px;
        height: 1px;
        margin: -1px;
        padding: 0;
        overflow: hidden;
        clip: rect(0, 0, 0, 0);
        white-space: nowrap;
        border: 0;
    }

    // Apply focus style to the checkbox box
    &:focus-within {
        outline: none;
        &::before {
            outline: none;
            // Use a subtle box-shadow for focus, maybe based on primary blue
            box-shadow: 0 0 0 2px var(--focus-ring-color);
        }
    }

    // Text styling within the label
    font-size: 0.95rem;
    font-weight: 500;
    color: var(--text-color);
    line-height: 1.5;
    word-break: break-word;
}

// --- Button Styling (Remains the same) ---
.onboarding-button-box {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    margin-top: var(--spacing-xl);
    padding-top: var(--spacing-lg);
    border-top: 1px solid var(--border-color);
    gap: var(--spacing-md);
}

.onboarding-button-box button,
.onboarding-button-box a button {
    flex: 1 1 auto;
    min-width: 130px;
    padding: 0.7rem 1.5rem;
    font-size: 1rem;
    font-weight: 600;
    border-radius: var(--border-radius-md);
    border: 1px solid transparent;
    cursor: pointer;
    transition: var(--transition-base);
    text-align: center;
    line-height: 1.5;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);

    &:last-of-type { // Primary
        background-color: var(--primary-color);
        color: var(--text-light-color);
        border-color: var(--primary-color);
        &:hover:not(:disabled) {
            background-color: var(--primary-hover-color);
            border-color: var(--primary-hover-color);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            transform: translateY(-1px);
        }
    }
    &:first-of-type { // Secondary
        background-color: var(--container-bg-color);
        color: var(--primary-color);
        border-color: var(--border-color-medium);
        &:hover:not(:disabled) {
            background-color: var(--primary-light-color);
            border-color: var(--primary-color);
            color: var(--primary-hover-color);
            transform: translateY(-1px);
        }
    }
    &:focus-visible {
        outline: none;
        box-shadow: 0 0 0 3px var(--focus-ring-color), 0 1px 2px rgba(0, 0, 0, 0.05);
    }
    &:disabled {
        opacity: 0.6;
        cursor: not-allowed;
        background-color: var(--secondary-color) !important;
        border-color: var(--secondary-color) !important;
        color: var(--text-light-color) !important;
        box-shadow: none !important;
        transform: none !important;
    }
}

// --- Responsive Adjustments (Remains the same) ---

@media (max-width: 900px) {
    .amenity-container {
        width: 95%;
        padding: var(--spacing-lg) var(--spacing-xl);
    }
    .amenity-groups {
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    }
}

@media (max-width: 768px) {
    .amenity-container {
        padding: var(--spacing-lg);
    }
    .amenity-groups {
        gap: var(--spacing-lg);
    }
    .amenity-items {
        gap: var(--spacing-xs);
    }
    .amenity-item {
        padding: var(--spacing-sm) var(--spacing-sm);
        padding-left: calc(var(--spacing-sm) + var(--checkbox-size) + var(--spacing-sm));
    }
    .onboarding-button-box {
        flex-direction: column-reverse;
        align-items: stretch;
    }
    .onboarding-button-box button,
    .onboarding-button-box a button {
        width: 100%;
    }
}

@media (max-width: 480px) {
    .amenity-container {
        padding: var(--spacing-md);
        border-radius: var(--border-radius-md);
    }
    .amenity-groups {
        grid-template-columns: 1fr;
        gap: var(--spacing-md);
    }
    .amenity-category h3 {
        font-size: 1.15rem;
    }
    .amenity-item {
        font-size: 0.9rem;
    }
    .onboardingSectionTitle {
        font-size: 1.5rem;
    }
    .onboardingSectionSubtitle {
        font-size: 0.9rem;
    }
    .onboarding-button-box button,
    .onboarding-button-box a button {
        padding: 0.6rem 1.2rem;
        font-size: 0.95rem;
    }
}
/** END OF FILE AmenityStyles.scss (Target Checkbox Style - SVG Checkmark) */